import{j as n}from"./jsx-runtime-BlDnFLNC.js";import{r as k}from"./index-Cu9bd8lq.js";const v="_check_1s5e3_1",x="_rounded_1s5e3_18",y="_checked_1s5e3_22",C="_disabled_1s5e3_26",w="_success_1s5e3_39",b="_info_1s5e3_47",j="_warning_1s5e3_55",D="_danger_1s5e3_63",E="_icon_1s5e3_71",s={check:v,rounded:x,checked:y,disabled:C,default:"_default_1s5e3_31",success:w,info:b,warning:j,danger:D,icon:E};function N(...e){return e.filter(Boolean).join(" ")}function i({checked:e,onChange:o,disabled:a=!1,variant:c="default"}){const l=()=>{a||o(!e)},g=d=>{!a&&(d.key===" "||d.key==="Enter")&&(d.preventDefault(),o(!e))};return n.jsx("div",{role:"checkbox","aria-checked":e,"aria-disabled":a,tabIndex:a?-1:0,className:N(s.check,s[c],e&&s.checked,a&&s.disabled),onClick:l,onKeyDown:g,children:e&&n.jsx("svg",{className:s.icon,width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"3",strokeLinecap:"round",strokeLinejoin:"round",children:n.jsx("polyline",{points:"20 6 9 17 4 12"})})})}i.__docgenInfo={description:"",methods:[],displayName:"Check",props:{checked:{required:!0,tsType:{name:"boolean"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},variant:{required:!1,tsType:{name:"union",raw:"'default' | 'success' | 'info' | 'warning' | 'danger'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'success'"},{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'danger'"}]},description:"",defaultValue:{value:"'default'",computed:!1}}}};const q={title:"Components/Check",component:i};function T({checked:e,variant:o,disabled:a}){const[c,l]=k.useState(e);return n.jsx(i,{checked:c,onChange:l,variant:o,disabled:a})}function r(){return n.jsx("div",{style:{display:"flex",flexDirection:"column",gap:"8px"},children:["default","success","info","warning","danger"].map(e=>n.jsx(T,{checked:!1,variant:e,onChange:()=>{}},e))})}function t(){return n.jsx("div",{style:{display:"flex",flexDirection:"column",gap:"8px"},children:["default","success","info","warning","danger"].map(e=>n.jsx(i,{checked:!0,disabled:!0,variant:e,onChange:()=>{}},e))})}r.__docgenInfo={description:"",methods:[],displayName:"Variants"};t.__docgenInfo={description:"",methods:[],displayName:"Disabled"};var u,p,f;r.parameters={...r.parameters,docs:{...(u=r.parameters)==null?void 0:u.docs,source:{originalSource:`function Variants(): JSX.Element {
  return <div style={{
    display: 'flex',
    flexDirection: 'column',
    gap: '8px'
  }}>
      {(['default', 'success', 'info', 'warning', 'danger'] as CheckProps['variant'][]).map(variant => <Template key={variant} checked={false} variant={variant} onChange={() => {}} />)}
    </div>;
}`,...(f=(p=r.parameters)==null?void 0:p.docs)==null?void 0:f.source}}};var m,h,_;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`function Disabled(): JSX.Element {
  return <div style={{
    display: 'flex',
    flexDirection: 'column',
    gap: '8px'
  }}>
      {(['default', 'success', 'info', 'warning', 'danger'] as CheckProps['variant'][]).map(variant => <Check key={variant} checked disabled variant={variant} onChange={() => {}} />)}
    </div>;
}`,...(_=(h=t.parameters)==null?void 0:h.docs)==null?void 0:_.source}}};const I=["Variants","Disabled"];export{t as Disabled,r as Variants,I as __namedExportsOrder,q as default};
