@import '../globals/breakpoints';
@import '../globals/variables';

@mixin respond-to($breakpoint) {
  $value: map-get($ads_breakpoints_scales, $breakpoint);
  @if $value {
    @media (max-width: $value) {
      @content;
    }
  }
}

.container {
  box-sizing: border-box;
  margin: 0 $ads-gridforge-margin;
  max-width: $ads-gridforge-container-size;
  padding: 0;
  width: 100%;
}

.auto-grid {
  display: grid;
  gap: $ads-gridforge-gutter;
  grid-template-columns: repeat(12, 1fr);
}

.grid-item {
  align-items: center;
  background-color: $ads-grid-item-bg;
  border: none;
  color: transparent;
  display: flex;
  font-weight: bold;
  justify-content: center;
  min-height: 50px;
  padding: $ads-grid-item-padding;
  text-align: center;
}

/* Clases base: col-1 a col-12 */
@for $i from 1 through 12 {
  .col-#{$i} {
    grid-column: span $i;
  }
}

/* Generar clases responsivas din√°micamente */
@each $bp-name, $bp-value in $ads_breakpoints_scales {
  @include respond-to($bp-name) {
    @for $i from 1 through 12 {
      .col-#{$bp-name}-#{$i} {
        grid-column: span $i !important;
      }
    }
  }
}
